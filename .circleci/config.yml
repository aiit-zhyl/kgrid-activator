# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#

version: 2
jobs:

  ##############
  # Build job uses a go cli tool to create a github release
  ##############
  build:

    working_directory: ~/repo

    docker:
      - image: circleci/openjdk:8-jdk

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-


      #must run install to ensure multi module dependencies(simple-scripts-api) are cached
      - run: mvn -DskipTests clean install dependency:resolve-plugins dependency:go-offline -s .circleci/settings.xml

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run build and test
      - run: mvn package -s .circleci/settings.xml


      # save test results
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: target


  ##############
  # Deploy To Heroku Job
  ##############
  deploy_heroku:

    working_directory: ~/repo

    docker:
      - image: circleci/openjdk:8-jdk

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      - run: DOWNLOAD_URL=$(curl -s https://api.github.com/repos/kgrid/mopen-opioid-collection/releases/latest | jq -r ".assets[].browser_download_url") && curl -L -O $DOWNLOAD_URL
      - run: unzip -o opioid-shelf.zip -d etc
      - run: HEROKU_API_KEY=$HEROKU_API_KEY mvn heroku:deploy -s .circleci/settings.xml
      - store_artifacts:
               path: target

workflows:
  version: 2
  build_test_release:
    jobs:
      - build
      - deploy_heroku:
          requires:
            - build